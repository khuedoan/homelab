argo-cd:
  server:
    extraArgs:
      - --insecure
    config:
      statusbadge.enabled: 'true'
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
      # TODO https://github.com/argoproj/argo-helm/pull/1070
      # resource.customizations.health.argoproj.io_ApplicationSet: |
      #   hs = {}
      #   if obj.status ~= nil then
      #     if obj.status.conditions ~= nil then
      #       for i, condition in pairs(obj.status.conditions) do
      #         if condition.type == "ErrorOccurred" and condition.status == "True" then
      #           hs.status = "Degraded"
      #           hs.message = condition.message
      #           return hs
      #         end
      #         if condition.type == "ResourcesUpToDate" and condition.status == "True" then
      #           hs.status = "Healthy"
      #           hs.message = condition.message
      #           return hs
      #         end
      #       end
      #     end
      #   end
      #   hs.status = "Progressing"
      #   hs.message = ""
      #   return hs
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - &host argocd.khuedoan.com
      tls:
        - secretName: argocd-tls-certificate
          hosts:
            - *host
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  repoServer:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  
  redis:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  
  dex:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
